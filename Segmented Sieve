vector<int>generateprimes(int n) 
{

	sieve();
	vector<int>ds;
	for(int i=2;i<=n;i++)
	{
		if(Prime[i]==1)
		{
			ds.push_back(i);
		}
	}
	return ds;

}
int main()
{
	Takeinput();
	int t;
	cin>>t;
	while(t--)
	{
		int l,r;
		cin>>l>>r;
		//step1 generate all the till sqrt(r)
		vector<int>Primes=generateprimes(sqrt(r));

		//step2 create a dummy array of size (r-l)+1 and mark that with 1 
		int dummy[r-l+1];
		for(int i=1;i<r-l+1;i++)
		{
			dummy[i]=1;
		}
		//step3  for all prime numbers marks its mltiples is 0;
		for(auto pr:Primes)
		{
			int FirstMltiple=(l/pr)*pr;
			if(FirstMltiple<l)FirstMltiple+=pr;
			for(int j=max(FirstMltiple,pr*pr);j<=r;j+=pr)
			{
				dummy[j-l]=0;
			}
		}
		//step4 get the all the primes
		for(int i=l;i<=r;i++)
		{
			if(dummy[i-l]==true)cout<<i<<endl;
		}
	}
}
